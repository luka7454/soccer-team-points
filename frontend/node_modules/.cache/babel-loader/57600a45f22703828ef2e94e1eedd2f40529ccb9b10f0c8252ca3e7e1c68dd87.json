{"ast":null,"code":"import axios from 'axios';\n\n// API 기본 URL 설정\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// API 인스턴스 생성\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 멤버 관련 API 함수\nexport const memberAPI = {\n  // 모든 멤버 조회\n  getAll: async () => {\n    try {\n      const response = await api.get('/members');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching members:', error);\n      throw error;\n    }\n  },\n  // 새 멤버 추가\n  create: async memberData => {\n    try {\n      const response = await api.post('/members', memberData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating member:', error);\n      throw error;\n    }\n  },\n  // 멤버 정보 수정\n  update: async (id, memberData) => {\n    try {\n      const response = await api.put(`/members/${id}`, memberData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating member:', error);\n      throw error;\n    }\n  },\n  // 멤버 삭제\n  delete: async id => {\n    try {\n      const response = await api.delete(`/members/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting member:', error);\n      throw error;\n    }\n  },\n  // 특정 카테고리 점수 증가/감소\n  updateScore: async (id, category, value) => {\n    try {\n      const response = await api.patch(`/members/${id}/${category}`, {\n        value\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating score:', error);\n      throw error;\n    }\n  },\n  // 대량 멤버 추가 (Excel 업로드 등)\n  bulkImport: async members => {\n    try {\n      const response = await api.post('/members/bulk', {\n        members\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error bulk importing members:', error);\n      throw error;\n    }\n  }\n};\n\n// 카테고리 관련 API 함수\nexport const categoryAPI = {\n  // 모든 카테고리 조회\n  getAll: async () => {\n    try {\n      const response = await api.get('/categories');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      throw error;\n    }\n  },\n  // 카테고리 정보 수정\n  update: async (id, categoryData) => {\n    try {\n      const response = await api.put(`/categories/${id}`, categoryData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating category:', error);\n      throw error;\n    }\n  },\n  // 키로 카테고리 정보 수정\n  updateByKey: async (key, categoryData) => {\n    try {\n      const response = await api.put(`/categories/key/${key}`, categoryData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating category by key:', error);\n      throw error;\n    }\n  }\n};\nexport default {\n  member: memberAPI,\n  category: categoryAPI\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","memberAPI","getAll","response","get","data","error","console","memberData","post","update","id","put","delete","updateScore","category","value","patch","bulkImport","members","categoryAPI","categoryData","updateByKey","key","member"],"sources":["C:/Users/jay/soccer-team-points/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API 기본 URL 설정\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// API 인스턴스 생성\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// 멤버 관련 API 함수\r\nexport const memberAPI = {\r\n  // 모든 멤버 조회\r\n  getAll: async () => {\r\n    try {\r\n      const response = await api.get('/members');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching members:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // 새 멤버 추가\r\n  create: async (memberData) => {\r\n    try {\r\n      const response = await api.post('/members', memberData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating member:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // 멤버 정보 수정\r\n  update: async (id, memberData) => {\r\n    try {\r\n      const response = await api.put(`/members/${id}`, memberData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating member:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // 멤버 삭제\r\n  delete: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/members/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error deleting member:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // 특정 카테고리 점수 증가/감소\r\n  updateScore: async (id, category, value) => {\r\n    try {\r\n      const response = await api.patch(`/members/${id}/${category}`, { value });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating score:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // 대량 멤버 추가 (Excel 업로드 등)\r\n  bulkImport: async (members) => {\r\n    try {\r\n      const response = await api.post('/members/bulk', { members });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error bulk importing members:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// 카테고리 관련 API 함수\r\nexport const categoryAPI = {\r\n  // 모든 카테고리 조회\r\n  getAll: async () => {\r\n    try {\r\n      const response = await api.get('/categories');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // 카테고리 정보 수정\r\n  update: async (id, categoryData) => {\r\n    try {\r\n      const response = await api.put(`/categories/${id}`, categoryData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating category:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // 키로 카테고리 정보 수정\r\n  updateByKey: async (key, categoryData) => {\r\n    try {\r\n      const response = await api.put(`/categories/key/${key}`, categoryData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating category by key:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  member: memberAPI,\r\n  category: categoryAPI\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}